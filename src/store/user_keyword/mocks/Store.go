// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	model "github.com/phuwn/crawlie/src/model"
	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"
)

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// BulkInsert provides a mock function with given fields: tx, uks
func (_m *Store) BulkInsert(tx *gorm.DB, uks []*model.UserKeyword) error {
	ret := _m.Called(tx, uks)

	if len(ret) == 0 {
		panic("no return value specified for BulkInsert")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*gorm.DB, []*model.UserKeyword) error); ok {
		r0 = rf(tx, uks)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewStore creates a new instance of Store. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *Store {
	mock := &Store{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
